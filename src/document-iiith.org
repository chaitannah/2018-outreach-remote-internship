
#+TITLE: Understanding Virtual Labs and validating the fixes 
#+AUTHOR: VLEAD
#+DATE: [2019-02-15 Fri]
#+SETUPFILE: ./org-templates/level-0.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document describes about an activity to understand
  the process in a Software Development Life Cycle. You
  would be exploring the virtual (and/or the other)labs of IIIT Hyderabad. Identify
  bugs and fix bugs in the Virtual labs along with reviewing
  the work of other fellow interns who are part of Virtual Labs
  Outreach Internship Program

* Prerequisites 
  + Download the feedback form from the [[https://drive.google.com/file/d/1FBkH8uMY8OgdNLUw4laE6kn6i0Q5hjeI/view?usp=sharing][link]]. 
  + The following software installations are required on your machine.
    + [[http://get.adobe.com/flashplayer/][Adobe Flash]]
    + [[https://www.java.com/en/download/help/windows_manual_download.xml][Java]] (Click on "Download and Install")
    + [[http://download.oracle.com/otn-pub/java/java3d/1.5.1/java3d-1_5_1-windows-amd64.exe][Java3d]] (Package: j3d-1_5_2-linux-amd64)
  
* Step 1
** Steps to be followed for browsing the labs in Virtual Labs
  + Step 1 - Open your Web Browser. Type http://vlab.co.in/
    and press Enter (or) Click [[http://vlab.co.in/][here]] This will be redirect
    you Virtual Labs website.
  + Step 2 - Scroll the page down. You will be able to see
    "Broad Areas of Virtual Labs".
  + Step 3 - Click on any Discipline/Branch you belong to.
    For Example : "Computer Science & Engineering"
  + Step 4 - Now you will be able to see the labs related to
    the discipline selected in Step 3.  
  + Step 5 - Click any lab you wish to perform, that takes
    you to the Experiment page.  
    For Example : Click on "Data Structures"
  + Step 6 : Click on "List of experiments" in the left menu
    bar. This takes you to the list of experiments page.
  + Step 7 - Click on any experiment. It will redirects you
    the Introduction of respective experiment. 
    For Example : Click on "Sorting using Arrays"  
  + Step 8 - To perform any experiment, Click on
    "Simulation/Experiment". Now you can start performing
    the experiments of Virtual Labs.  
    For example : Click on "Quick Sort". The experiment
    opens in new window. In case if your not able to access
    please make sure that Adobe flash is installed and
    allowed for the web Browser.
  + Step 9 - After Performing the experiment, make sure that
    you note the lab name and the experiment name in the feedback form
    document, whether it worked or not and any other remarks.
  + Step 10 - You need to perform atleast 15 experiments
    of any labs and note them in the feedback form
    document. 
  + Step 11 - Make sure that you answer 4 questions on the
    feedback form.
  + Step 12 - Please fill in your motivation or interest in
    doing the experiments in the Virtual Lab, before you
    start the experiment, then after 5 experiments, after 10
    experiments and after 15 experiments. Rate your motivation or
    interest on a scale of 1 to 10.
 
** Submit the feedback form
  + Step 1 - Fill the feedback form (2 Pages) document.
  + Step 2 - After filling the feedback form, print it and
    sign the printed feedback form.  
  + Step 3 - Scan the filled in feedback form.
  + Step 4 - Upload the scaned document in the [[https://drive.google.com/drive/folders/1fnRs0TPlRKY9672NsSOLYPeNVedv_ioH?usp=sharing][link]].
    format.
* Step 2
  1) Go to the [[www.http://vlabs.ac.in][Virtual Labs website]] and click on
     IIIT-Hyderabad institute available in the Participating 
     institute in the left corner of the webpage to access
     the labs to be tested.
  2) Select a lab and start exploring the features of the
     experiments and the content
  3) While exploring the lab ,you may encounter the issues
     such as
   1) *Operational defects* : Such as broken links, error
      pages, invisible or incorrect content including
      English grammar and buttons that not in
      functioning. The defects that you have observed other
      than the above listed are also be logged as bugs. 
   2) *Simulation defects* :
       + The simulation that doesnot work as per the given
         instructions.
       + The simulator with no instructions.
       + When the output of the simulation is not as per the
         requirement.
       + Logical flaws in the experiment's simulation.
       + Quality of simulator can be improved or enhanced.
  4) Log as issues in [[https://github.com/virtual-labs][github]]

** Logging issues in GitHub
   The issues need to be logged in the repository. Please
   follow the steps given below to create a new issue in
   Github.
   1) Type the lab name in the search bar of the
      [[https://github.com/virtual-labs][repository]]. Select the IIIT Hyderabad lab you want to
      create new issues.
   2) Click on "Issues" option, that is just below the
      overview on the left hand side of your web page.
   3) Click on "New Issue".  
   4) Title of the issue should be in the following format.
      "*<experiment_name>_<sub section of experiment where
      the bug is detected>*"
      - For Example :
       numerical-representation_objective
   5) Following information must be given in the issues
      while raising a bug in Github.
    + Defect description : The description should specify an
      exact problem in the application. 
    + Steps to reproduce the issue : A detailed step by step
      description to be given right from the login step
      until the bug is identified.
    + Expected result : It should elaborate the result which
      you are expecting to see as an end user.
    + Actual result : This section should descibe what the
      feature is actually showing instead of correct results.
    + Screen shot : A small screenshot of the defect
      capturing the screen where it was identified and needs
      to be resolved.
    Please go through this [[https://github.com/virtual-labs/problem-solving-iiith/issues/343][Sample Issue]] for better understanding. 
** Invalid issues        
  The following mentioned issues would be considered invalid
   1) The Feedback submit is not working across all the labs and
      experiments, this is again a known issue to us. It won't be
      considered as valid.
   2) We are not focussing on spelling mistakes and
      grammatical errors, even if such issues are raised
      they won't be given much weightage.
** Fixing the issues
  + Step 1 - Choose a lab for which you want to start resolving the
    issues. Select the lab repository from [[https://github.com/virtual-labs/][GitHub]].
  + Step 2 - Fork the lab repository so that you have the local copy
    of the lab codebase in your machine.
  + Step 3 - Go to the issues section in the repo and pick up the
    issue you want to start resolving.
  + Step 4 - Make changes in your forked copy of the lab repo, [[https://docs.google.com/presentation/d/1HlGjkacVdE7-3FRc8x8RKEUJiTmfnrxqe8BX4ZjnSNI/edit?usp=sharing][commit]]
    the changes and create a pull request.
  + Step 5 - After you create the pull request, update the same issue
    with *commit id* of the code changes for which you created a pull
    request. Comment on the issue as *fixed*.
  + Step 6 - Once the issue has comment as *fixed* , provide the issue
    link on Slack channel for 2 members to validate the fix. One
    member could be from the same college but the other validator must
    be from some other college. Both the validators must also review
    the fixes and respond on the same issue with the comment that the
    issue fix is correct.
  + Step 7 - Once the issue gets reviewed and approved by
    the 2 validators, the Virtual Labs team would review the
    fix for the final acceptance. If the issue fix is
    accepted by the Virtual Labs team also, it would be
    labelled as *Fix is validated and ready to move to
    production, @kurasaiteja, S5*.
  + Step 8 - After you see the issue labelled as *Fix is
    validated and ready to move to production, @kurasaiteja,
    S5* and more than one student was working on the issue
    simultaneously, consider that the issue is fixed no more
    fixes would be accepted by any other student.
  + Step 9 - Switch to some other issue.x
     
* Step 3
  Please use this [[https://github.com/virtual-labs/][link]] for the IIIT-Hyderabad lab code
  repositories for the validation process. The IIIT
  hyderabad labs which needs to be validated would have a
  naming convention of <labname>-iiith.
  + Step 1 - Go to the issues section in the [[https://github.com/virtual-labs/][lab repo]] and
    filter the issues with a label "2018-Open". You have to
    validate the fixes in these issues only. Look only for
    the *Open* issues. the closed ones in this are no longer
    valid for us. Do not filter and try to comment on other
    issues.
  For Example : [[https://github.com/virtual-labs/computer-programming-responsive-iiith/issues/158][Sample issue]]
  + Step 2 - In every such issue, you would find a commit id
    and responses from 2 different members saying that it is
    a valid fix. Only if an issue has all the above 3(1
    commit id and 2 validations), you should start your
    final validation. If there is only 1 member's response
    saying that its a valid fix, do not start validating
    that issue. Having 2 valid fix comments in every issue
    is mandatory for you to go ahead.
  + Step 3 - Go through the issue raised with all the description to
    understand the problem very clearly so that you are in a
    position to review the code for the fixes.
  + Step 4 - After the identification of such issue, click on the
    commit id provided in the earlier responses and go
    through the code given for the fix.
  + Step 5 - The next step for you to carry out is testing
    the fix on the identical production environment. Setup
    [[https://github.com/vlead/setup-ovpl-centos/blob/develop/user-docs/run-ads-using-vagrant-box.org][Auto Deployment Service]] on your local machines and
    follow the document carefully to deploy the lab. Once
    this is successful and the lab runs identically as on
    [[https://vlab.co.in][vlab.co.in]] we can move it to our AWS servers for final
    deployment.
  + Step 6 - If you find that the given fix is incorrect, please
    comment on the same issue. If you find that the 2 other
    validations are also incorrect, comment on the same
    issue itself.
  + Step 7 - If you think that the fix given is correct, you
    have tested it on your local machines and it should be
    moved to production, kindly comment in the same
    issue. Please follow these steps for commenting on the
    issue after testing. The comment should include the
    following three parameters:
    1) Whether the issue is valid or not.
    2) Name of person whose code is to be moved into
       production.
    3) Severity of the issue.
       
    The Severity level is defined as follows:
    + S5 - Broken links and english change.
    + S4 - Change in existing content/code .
    + S3 - Enhancement/Addition of new content
    + S2 - New feature/fix (with (<47 lines of code for JS,
      <53 for Java and <19 for Python))
    + S1 - Writing/developing new feature(>47 lines of code
      for JS, >53 for Java and >19 for Python)

    NOTE:
    - S1 and S2 would be JS and Java of the simulation
    - S3 and S4 would be for content- HTJML/js of
      non-simulation, ie. procedure, references, quiz, etc
      
    Example comment: Fix is validated and can be moved to
    production, githubhandle, severity level.  Fix is
    validate and can be moved to production,
    gayatripurigilla, S1.

  + Step 8 - Once the issue is ready to be moved to production from
    your side, there won't be any other person reviewing
    it. It would directly be made available to the end
    users. The issue would be marked as *Closed* after this.

    This is an iterative cycle and it goes on till you
    validate all the issues fixed in the lab. Based on your
    final reviews, the other students who had fixed the
    fixes would be evaluated and points would be given to
    them. 
    
* Conclusion
  After the validation process, the issues would be
  considered as resolved and moved to production. At the end
  of this we should be able to close the issues which have
  been moved to production.
  
